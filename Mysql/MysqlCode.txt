Microsoft Windows [Version 10.0.18363.1082]
(c) 2019 Microsoft Corporation. All rights reserved.
C:\Users\yongchanski>cd C:\Bitnami\wampstack-7.4.10-0\mysql\bin


C:\Bitnami\wampstack-7.4.10-0\mysql\bin>mysql -uroot -p
Enter password: ******


Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 9
Server version: 8.0.21 MySQL Community Server - GPL

Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.
Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.
Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

// DATABASE 생성
mysql> CREATE DATABASE opentutorials;
Query OK, 1 row affected (0.02 sec)

mysql> SHOW DATABASES;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| opentutorials      |
| performance_schema |
| sys                |
+--------------------+
5 rows in set (0.00 sec)

// 생성된 데이터베이스 선택
mysql> USE opentutorials;
Database changed



// 데이터베이스 테이블 만들기
mysql> CREATE TABLE topic(
    -> id INT(11) NOT NULL AUTO_INCREMENT,
    -> title VARCHAR(100) NOT NULL,
    -> description TEXT NULL,
    -> created DATETIME NOT NULL,
    -> author VARCHAR(30) NULL,
    -> profile VARCHAR(100) NULL,
    -> PRIMARY KEY(id));
Query OK, 0 rows affected, 1 warning (0.07 sec)



mysql> SHOW TABLES;
+-------------------------+
| Tables_in_opentutorials |
+-------------------------+
| topic                   |
+-------------------------+
1 row in set (0.01 sec)



// 테이블 구조 확인
mysql> DESC topic;
+-------------+--------------+------+-----+---------+----------------+
| Field       | Type         | Null | Key | Default | Extra          |
+-------------+--------------+------+-----+---------+----------------+
| id          | int          | NO   | PRI | NULL    | auto_increment |
| title       | varchar(100) | NO   |     | NULL    |                |
| description | text         | YES  |     | NULL    |                |
| created     | datetime     | NO   |     | NULL    |                |
| author      | varchar(30)  | YES  |     | NULL    |                |
| profile     | varchar(100) | YES  |     | NULL    |                |
+-------------+--------------+------+-----+---------+----------------+
6 rows in set (0.01 sec)



// 테이블에 데이터(행 = row) 추가
mysql> INSERT INTO topic(title, description, created, author, profile) VALUES('MySQL', 'MySQL is...', NOW(), 'egoing', 'developer');
Query OK, 1 row affected (0.01 sec)

mysql> SELECT * FROM topic;
+----+-------+-------------+---------------------+--------+-----------+
| id | title | description | created             | author | profile   |
+----+-------+-------------+---------------------+--------+-----------+
|  1 | MySQL | MySQL is... | 2020-09-27 23:43:35 | egoing | developer |
+----+-------+-------------+---------------------+--------+-----------+
1 row in set (0.00 sec)



mysql> INSERT INTO topic(title, description, created, author, profile) VALUES('ORACLE', 'ORACLE is ...', NOW(), 'egoing', 'developer');
Query OK, 1 row affected (0.01 sec)

mysql> INSERT INTO topic(title, description, created, author, profile) VALUES('SQL Server', 'SQL Server is ...', NOW(), 'duru', 'data administrator');
Query OK, 1 row affected (0.01 sec)

mysql> INSERT INTO topic(title, description, created, author, profile) VALUES('PostgreSQL', 'PostgreSQL is ...', NOW(), 'taeho', 'data scientist, developer');
Query OK, 1 row affected (0.01 sec)

mysql> INSERT INTO topic(title, description, created, author, profile) VALUES('MongoDB', 'MongoDB is ...', NOW(), 'egoing', 'developer');
Query OK, 1 row affected (0.01 sec)



// 테이블 내용 확인 ( * = 전체를 의미 )
mysql> SELECT * FROM topic;
+----+------------+-------------------+---------------------+--------+---------------------------+
| id | title      | description       | created             | author | profile                   |
+----+------------+-------------------+---------------------+--------+---------------------------+
|  1 | MySQL      | MySQL is...       | 2020-09-27 23:43:35 | egoing | developer                 |
|  2 | ORACLE     | ORACLE is ...     | 2020-09-27 23:44:36 | egoing | developer                 |
|  3 | SQL Server | SQL Server is ... | 2020-09-27 23:45:11 | duru   | data administrator        |
|  4 | PostgreSQL | PostgreSQL is ... | 2020-09-27 23:45:57 | taeho  | data scientist, developer |
|  5 | MongoDB    | MongoDB is ...    | 2020-09-27 23:46:26 | egoing | developer                 |
+----+------------+-------------------+---------------------+--------+---------------------------+
5 rows in set (0.00 sec)



mysql> SELECT id, title,created,author FROM topic;
+----+------------+---------------------+--------+
| id | title      | created             | author |
+----+------------+---------------------+--------+
|  1 | MySQL      | 2020-09-27 23:43:35 | egoing |
|  2 | ORACLE     | 2020-09-27 23:44:36 | egoing |
|  3 | SQL Server | 2020-09-27 23:45:11 | duru   |
|  4 | PostgreSQL | 2020-09-27 23:45:57 | taeho  |
|  5 | MongoDB    | 2020-09-27 23:46:26 | egoing |
+----+------------+---------------------+--------+
5 rows in set (0.00 sec)



// WHERE 을 추가하여 원하는 값만 보기
mysql> SELECT id, title, created,author FROM topic WHERE author='egoing';
+----+---------+---------------------+--------+
| id | title   | created             | author |
+----+---------+---------------------+--------+
|  1 | MySQL   | 2020-09-27 23:43:35 | egoing |
|  2 | ORACLE  | 2020-09-27 23:44:36 | egoing |
|  5 | MongoDB | 2020-09-27 23:46:26 | egoing |
+----+---------+---------------------+--------+
3 rows in set (0.00 sec)



// ORDER BY 를 사용하여 정리하기
mysql> SELECT id, title, created,author FROM topic WHERE author='egoing' ORDER BY id DESC;
+----+---------+---------------------+--------+
| id | title   | created             | author |
+----+---------+---------------------+--------+
|  5 | MongoDB | 2020-09-27 23:46:26 | egoing |
|  2 | ORACLE  | 2020-09-27 23:44:36 | egoing |
|  1 | MySQL   | 2020-09-27 23:43:35 | egoing |
+----+---------+---------------------+--------+
3 rows in set (0.00 sec)



// LIMIT 을 사용하여 값의 범위 지정
mysql> SELECT id, title, created,author FROM topic WHERE author='egoing' ORDER BY id DESC LIMIT 2;
+----+---------+---------------------+--------+
| id | title   | created             | author |
+----+---------+---------------------+--------+
|  5 | MongoDB | 2020-09-27 23:46:26 | egoing |
|  2 | ORACLE  | 2020-09-27 23:44:36 | egoing |
+----+---------+---------------------+--------+
2 rows in set (0.00 sec)



mysql> DESC topic;
+-------------+--------------+------+-----+---------+----------------+
| Field       | Type         | Null | Key | Default | Extra          |
+-------------+--------------+------+-----+---------+----------------+
| id          | int          | NO   | PRI | NULL    | auto_increment |
| title       | varchar(100) | NO   |     | NULL    |                |
| description | text         | YES  |     | NULL    |                |
| created     | datetime     | NO   |     | NULL    |                |
| author      | varchar(30)  | YES  |     | NULL    |                |
| profile     | varchar(100) | YES  |     | NULL    |                |
+-------------+--------------+------+-----+---------+----------------+
6 rows in set (0.01 sec)



mysql> SELECT * FROM topic;
+----+------------+-------------------+---------------------+--------+---------------------------+
| id | title      | description       | created             | author | profile                   |
+----+------------+-------------------+---------------------+--------+---------------------------+
|  1 | MySQL      | MySQL is...       | 2020-09-27 23:43:35 | egoing | developer                 |
|  2 | ORACLE     | ORACLE is ...     | 2020-09-27 23:44:36 | egoing | developer                 |
|  3 | SQL Server | SQL Server is ... | 2020-09-27 23:45:11 | duru   | data administrator        |
|  4 | PostgreSQL | PostgreSQL is ... | 2020-09-27 23:45:57 | taeho  | data scientist, developer |
|  5 | MongoDB    | MongoDB is ...    | 2020-09-27 23:46:26 | egoing | developer                 |
+----+------------+-------------------+---------------------+--------+---------------------------+
5 rows in set (0.00 sec)

// UPDATE 를 이용하여 데이터 값 수정
mysql> UPDATE topic SET description = 'Oracle is ...', title = 'Oracle' WHERE id = 2;
Query OK, 1 row affected (0.03 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> SELECT * FROM topic;
+----+------------+-------------------+---------------------+--------+---------------------------+
| id | title      | description       | created             | author | profile                   |
+----+------------+-------------------+---------------------+--------+---------------------------+
|  1 | MySQL      | MySQL is...       | 2020-09-27 23:43:35 | egoing | developer                 |
|  2 | Oracle     | Oracle is ...     | 2020-09-27 23:44:36 | egoing | developer                 |
|  3 | SQL Server | SQL Server is ... | 2020-09-27 23:45:11 | duru   | data administrator        |
|  4 | PostgreSQL | PostgreSQL is ... | 2020-09-27 23:45:57 | taeho  | data scientist, developer |
|  5 | MongoDB    | MongoDB is ...    | 2020-09-27 23:46:26 | egoing | developer                 |
+----+------------+-------------------+---------------------+--------+---------------------------+
5 rows in set (0.00 sec)



// DELETE 를 이용하여 데이터 값 삭제
mysql> DELETE FROM topic WHERE id = 5;
Query OK, 1 row affected (0.01 sec)

mysql> SELECT * FROM topic;
+----+------------+-------------------+---------------------+--------+---------------------------+
| id | title      | description       | created             | author | profile                   |
+----+------------+-------------------+---------------------+--------+---------------------------+
|  1 | MySQL      | MySQL is...       | 2020-09-27 23:43:35 | egoing | developer                 |
|  2 | Oracle     | Oracle is ...     | 2020-09-27 23:44:36 | egoing | developer                 |
|  3 | SQL Server | SQL Server is ... | 2020-09-27 23:45:11 | duru   | data administrator        |
|  4 | PostgreSQL | PostgreSQL is ... | 2020-09-27 23:45:57 | taeho  | data scientist, developer |
+----+------------+-------------------+---------------------+--------+---------------------------+
4 rows in set (0.00 sec)



// 아래 내용은 관계형 데이터베이스를 이해하기 위한 실습
mysql> SHOW TABLES;
+-------------------------+
| Tables_in_opentutorials |
+-------------------------+
| topic                   |
+-------------------------+
1 row in set (0.00 sec)

// RENAME 을 이용하여 테이블 이름 변경
mysql> RENAME TABLE topic TO topic_backup;
Query OK, 0 rows affected (0.07 sec)

mysql> SHOW TABLES;
+-------------------------+
| Tables_in_opentutorials |
+-------------------------+
| topic_backup            |
+-------------------------+
1 row in set (0.00 sec)



mysql> CREATE TABLE topic(
    -> id INT(11) NOT NULL AUTO_INCREMENT,
    -> title VARCHAR(30) NOT NULL,
    -> description TEXT NULL,
    -> created DATETIME NOT NULL,
    -> author_id INT(11) NULL,
    -> PRIMARY KEY(id)
    -> );
Query OK, 0 rows affected, 2 warnings (0.08 sec)

mysql> DESC topic;
+-------------+-------------+------+-----+---------+----------------+
| Field       | Type        | Null | Key | Default | Extra          |
+-------------+-------------+------+-----+---------+----------------+
| id          | int         | NO   | PRI | NULL    | auto_increment |
| title       | varchar(30) | NO   |     | NULL    |                |
| description | text        | YES  |     | NULL    |                |
| created     | datetime    | NO   |     | NULL    |                |
| author_id   | int         | YES  |     | NULL    |                |
+-------------+-------------+------+-----+---------+----------------+
5 rows in set (0.01 sec)



mysql> CREATE TABLE author(
    -> id INT(11) NOT NULL AUTO_INCREMENT,
    -> name VARCHAR(20) NOT NULL,
    -> profile VARCHAR(200) NULL,
    -> PRIMARY KEY(id)
    -> );
Query OK, 0 rows affected, 1 warning (0.06 sec)

mysql> SHOW TABLES;
+-------------------------+
| Tables_in_opentutorials |
+-------------------------+
| author                  |
| topic                   |
| topic_backup            |
+-------------------------+
3 rows in set (0.01 sec)



mysql> INSERT INTO author (id, name, profile) VALUES (1, 'egoing', 'developer');
Query OK, 1 row affected (0.01 sec)

mysql> SELECT * FROM topic;
Empty set (0.00 sec)

mysql> SELECT * FROM author;
+----+--------+-----------+
| id | name   | profile   |
+----+--------+-----------+
|  1 | egoing | developer |
+----+--------+-----------+
1 row in set (0.00 sec)

mysql> INSERT INTO author (id, name, profile) VALUES (2, 'duru', 'data administrator');
Query OK, 1 row affected (0.01 sec)

mysql> INSERT INTO author (id, name, profile) VALUES (3, 'taeho', 'data scientist, developer');
Query OK, 1 row affected (0.01 sec)

mysql> SELECT * FROM author;
+----+--------+---------------------------+
| id | name   | profile                   |
+----+--------+---------------------------+
|  1 | egoing | developer                 |
|  2 | duru   | data administrator        |
|  3 | taeho  | data scientist, developer |
+----+--------+---------------------------+
3 rows in set (0.00 sec)



mysql> INSERT INTO topic (id, title, description, created, author_id) VALUES (1, 'MySQL', 'MySQL is...', now(), 1);
Query OK, 1 row affected (0.01 sec)

mysql> SELECT * FROM topic;
+----+-------+-------------+---------------------+-----------+
| id | title | description | created             | author_id |
+----+-------+-------------+---------------------+-----------+
|  1 | MySQL | MySQL is... | 2020-09-28 22:53:31 |         1 |
+----+-------+-------------+---------------------+-----------+
1 row in set (0.00 sec)

mysql> INSERT INTO topic (id, title, description, created, author_id) VALUES (2, 'Oracle', 'Oracle is...', now(), 1);
Query OK, 1 row affected (0.01 sec)

mysql> INSERT INTO `topic` VALUES (3,'SQL Server','SQL Server is ...', now(), 2);
Query OK, 1 row affected (0.01 sec)

mysql> INSERT INTO `topic` VALUES (4,'PostgreSQL','PostgreSQL is ...', now(), 3);
Query OK, 1 row affected (0.01 sec)

mysql> INSERT INTO `topic` VALUES (5,'MongoDB','MongoDB is ...', now(), 1);
Query OK, 1 row affected (0.01 sec)

mysql> SELECT * FROM topic;
+----+------------+-------------------+---------------------+-----------+
| id | title      | description       | created             | author_id |
+----+------------+-------------------+---------------------+-----------+
|  1 | MySQL      | MySQL is...       | 2020-09-28 22:53:31 |         1 |
|  2 | Oracle     | Oracle is...      | 2020-09-28 22:54:21 |         1 |
|  3 | SQL Server | SQL Server is ... | 2020-09-28 22:56:04 |         2 |
|  4 | PostgreSQL | PostgreSQL is ... | 2020-09-28 22:56:38 |         3 |
|  5 | MongoDB    | MongoDB is ...    | 2020-09-28 22:57:00 |         1 |
+----+------------+-------------------+---------------------+-----------+
5 rows in set (0.00 sec)



mysql> SELECT * FROM author;
+----+--------+---------------------------+
| id | name   | profile                   |
+----+--------+---------------------------+
|  1 | egoing | developer                 |
|  2 | duru   | data administrator        |
|  3 | taeho  | data scientist, developer |
+----+--------+---------------------------+
3 rows in set (0.00 sec)



// JOIN 을 이용하여 두개의 테이블을 하나로 합치기
mysql> SELECT * FROM topic LEFT JOIN author ON topic.author_id = author.id;
+----+------------+-------------------+---------------------+-----------+------+--------+---------------------------+
| id | title      | description       | created             | author_id | id   | name   | profile                   |
+----+------------+-------------------+---------------------+-----------+------+--------+---------------------------+
|  1 | MySQL      | MySQL is...       | 2020-09-28 22:53:31 |         1 |    1 | egoing | developer                 |
|  2 | Oracle     | Oracle is...      | 2020-09-28 22:54:21 |         1 |    1 | egoing | developer                 |
|  3 | SQL Server | SQL Server is ... | 2020-09-28 22:56:04 |         2 |    2 | duru   | data administrator        |
|  4 | PostgreSQL | PostgreSQL is ... | 2020-09-28 22:56:38 |         3 |    3 | taeho  | data scientist, developer |
|  5 | MongoDB    | MongoDB is ...    | 2020-09-28 22:57:00 |         1 |    1 | egoing | developer                 |
+----+------------+-------------------+---------------------+-----------+------+--------+---------------------------+
5 rows in set (0.00 sec)



// SELECT 뒤에 보고싶은 값만 지정해서 위의 결과 같은 중복을 피하기 ( 그냥 'id' 라고 적으면 오류가 난다, 어떤 테이블의 id값인지 (topic.id) 정확하게 명시를 해줘야한다. )
mysql> SELECT topic.id , title, description, created, name, profile FROM topic LEFT JOIN author ON topic.author_id = author.id;
+----+------------+-------------------+---------------------+--------+---------------------------+
| id | title      | description       | created             | name   | profile                   |
+----+------------+-------------------+---------------------+--------+---------------------------+
|  1 | MySQL      | MySQL is...       | 2020-09-28 22:53:31 | egoing | developer                 |
|  2 | Oracle     | Oracle is...      | 2020-09-28 22:54:21 | egoing | developer                 |
|  3 | SQL Server | SQL Server is ... | 2020-09-28 22:56:04 | duru   | data administrator        |
|  4 | PostgreSQL | PostgreSQL is ... | 2020-09-28 22:56:38 | taeho  | data scientist, developer |
|  5 | MongoDB    | MongoDB is ...    | 2020-09-28 22:57:00 | egoing | developer                 |
+----+------------+-------------------+---------------------+--------+---------------------------+
5 rows in set (0.00 sec)



// 표의 column의 가독성을 높히기 위해 column 값 옆에 'AS 원하는 이름' 을 추가하면, 결과값에 이름이 반영된다.
mysql> SELECT topic.id AS topic_id, title, description, created, name, profile FROM topic LEFT JOIN author ON topic.author_id = author.id;
+----------+------------+-------------------+---------------------+--------+---------------------------+
| topic_id | title      | description       | created             | name   | profile                   |
+----------+------------+-------------------+---------------------+--------+---------------------------+
|        1 | MySQL      | MySQL is...       | 2020-09-28 22:53:31 | egoing | developer                 |
|        2 | Oracle     | Oracle is...      | 2020-09-28 22:54:21 | egoing | developer                 |
|        3 | SQL Server | SQL Server is ... | 2020-09-28 22:56:04 | duru   | data administrator        |
|        4 | PostgreSQL | PostgreSQL is ... | 2020-09-28 22:56:38 | taeho  | data scientist, developer |
|        5 | MongoDB    | MongoDB is ...    | 2020-09-28 22:57:00 | egoing | developer                 |
+----------+------------+-------------------+---------------------+--------+---------------------------+
5 rows in set (0.00 sec)



mysql> UPDATE author SET profile = 'database administrator' WHERE id = 2;
Query OK, 1 row affected (0.01 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> SELECT topic.id AS topic_id, title, description, created, name, profile FROM topic LEFT JOIN author ON topic.author_id = author.id;
+----------+------------+-------------------+---------------------+--------+---------------------------+
| topic_id | title      | description       | created             | name   | profile                   |
+----------+------------+-------------------+---------------------+--------+---------------------------+
|        1 | MySQL      | MySQL is...       | 2020-09-28 22:53:31 | egoing | developer                 |
|        2 | Oracle     | Oracle is...      | 2020-09-28 22:54:21 | egoing | developer                 |
|        3 | SQL Server | SQL Server is ... | 2020-09-28 22:56:04 | duru   | database administrator    |
|        4 | PostgreSQL | PostgreSQL is ... | 2020-09-28 22:56:38 | taeho  | data scientist, developer |
|        5 | MongoDB    | MongoDB is ...    | 2020-09-28 22:57:00 | egoing | developer                 |
+----------+------------+-------------------+---------------------+--------+---------------------------+
5 rows in set (0.00 sec)
